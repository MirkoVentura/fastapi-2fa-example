on:
  create:
    branches:

jobs:
  create-changelog-pull-request:
    if: ${{ startsWith(github.ref, 'refs/heads/release') }}
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository.
      - name: Checkout repository content.
        uses: actions/checkout@v2

      # Setup Python.
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      # Install requirements for Python.
      - name: Install python packages
        run: |
          python -m pip install --upgrade pip
          pip install -r ./.github/workflows/release/requirements.txt
      - name: Put branch name in the env.
        run: echo "branch=${GITHUB_REF##*/}" >> $GITHUB_ENV

      # Create version and branch name.
      - name: Get version and name
        run: python ./.github/workflows/release/version.py >> $GITHUB_ENV

      # Git configuration.
      - name: Setup git configuration
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<github-actions-bot@everli.com>"

      # Create pull request.
      - name: Create Pull Request
        uses: actions/github-script@v6
        id: pr
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: '${{ env.version }} -> Develop',
              owner,
              repo,
              head: '${{ github.ref_name }}',
              base: 'dev',
              body: ${{ env.version }}-${{ env.branch_name }} -> Develop',
            });
            github.rest.issues.update({
              owner,
              repo,
              issue_number: result.data.number,
              assignees: ['${{ github.actor }}'],
              labels: ['release','THIS FIRST!!']
            });
            return result.data.html_url
          result-encoding: string
      # Create pull request release to master.
      - name: Create Pull Request
        uses: actions/github-script@v6
        id: relToMaster
        with:
          script: |
            const { repo, owner } = context.repo;
            const result = await github.rest.pulls.create({
              title: '${{ env.version }} -> Master:',
              owner,
              repo,
              head: '${{ github.ref_name }}',
              base: 'main',
              body: '${{ env.version }}-${{ env.branch_name }} -> Master',
            });
            github.rest.issues.update({
              owner,
              repo,
              issue_number: result.data.number,
              assignees: ['${{ github.actor }}'],
              labels: ['release','NEEDS Apple\'s approval']
            });
            return result.data.html_url
          result-encoding: string
